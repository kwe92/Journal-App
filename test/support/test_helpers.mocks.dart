// Mocks generated by Mockito 5.4.4 from annotations
// in journal_app/test/support/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i15;
import 'dart:typed_data' as _i16;
import 'dart:ui' as _i4;

import 'package:auto_route/auto_route.dart' as _i14;
import 'package:flutter/material.dart' as _i5;
import 'package:http/http.dart' as _i2;
import 'package:journal_app/features/authentication/services/auth_service.dart'
    as _i21;
import 'package:journal_app/features/authentication/services/image_service.dart'
    as _i20;
import 'package:journal_app/features/authentication/services/token_service.dart'
    as _i18;
import 'package:journal_app/features/authentication/services/user_service.dart'
    as _i8;
import 'package:journal_app/features/journal/services/journal_entry_service.dart'
    as _i11;
import 'package:journal_app/features/mood/models/mood.dart' as _i3;
import 'package:journal_app/features/quotes/shared/models/liked_quote.dart'
    as _i25;
import 'package:journal_app/features/quotes/shared/models/liked_quote_provider.dart'
    as _i29;
import 'package:journal_app/features/quotes/shared/models/quote.dart' as _i27;
import 'package:journal_app/features/quotes/shared/services/liked_quotes_service.dart'
    as _i24;
import 'package:journal_app/features/quotes/shared/services/zen_quotes_api_service.dart'
    as _i26;
import 'package:journal_app/features/shared/abstractions/base_user.dart'
    as _i10;
import 'package:journal_app/features/shared/models/journal_entry.dart' as _i12;
import 'package:journal_app/features/shared/services/database_service.dart'
    as _i28;
import 'package:journal_app/features/shared/services/mood_service.dart' as _i17;
import 'package:journal_app/features/shared/services/time_service.dart' as _i19;
import 'package:journal_app/features/shared/services/toast_service.dart'
    as _i22;
import 'package:journal_app/features/shared/utilities/popup_parameters.dart'
    as _i23;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:sqflite/sqflite.dart' as _i7;

import 'test_helpers.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMood_3 extends _i1.SmartFake implements _i3.Mood {
  _FakeMood_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColor_4 extends _i1.SmartFake implements _i4.Color {
  _FakeColor_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageProvider_5<T extends Object> extends _i1.SmartFake
    implements _i5.ImageProvider<T> {
  _FakeImageProvider_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_6<T1> extends _i1.SmartFake implements _i6.Future<T1> {
  _FakeFuture_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_7 extends _i1.SmartFake implements _i7.Database {
  _FakeDatabase_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i8.UserService {
  @override
  String get bearerPrefix => (super.noSuchMethod(
        Invocation.getter(#bearerPrefix),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<void> createTempUser() => (super.noSuchMethod(
        Invocation.method(
          #createTempUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void setCurrentUser(Map<String, dynamic>? responseBody) => super.noSuchMethod(
        Invocation.method(
          #setCurrentUser,
          [responseBody],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i2.Response> updateUserInfo(_i10.BaseUser? updatedUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserInfo,
          [updatedUser],
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #updateUserInfo,
            [updatedUser],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #updateUserInfo,
            [updatedUser],
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void clearUserData() => super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearTempUserData() => super.noSuchMethod(
        Invocation.method(
          #clearTempUserData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTempUserFirstName(String? val) => super.noSuchMethod(
        Invocation.method(
          #setTempUserFirstName,
          [val],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTempUserLastName(String? val) => super.noSuchMethod(
        Invocation.method(
          #setTempUserLastName,
          [val],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTempUserEmail(String? val) => super.noSuchMethod(
        Invocation.method(
          #setTempUserEmail,
          [val],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTempUserPhoneNumber(String? val) => super.noSuchMethod(
        Invocation.method(
          #setTempUserPhoneNumber,
          [val],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTempUserPassword(String? val) => super.noSuchMethod(
        Invocation.method(
          #setTempUserPassword,
          [val],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i2.Response> get(
    String? endpoint, {
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? baseHeaders,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #baseHeaders: baseHeaders,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    String? endpoint, {
    dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [JournalEntryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJournalEntryService extends _i1.Mock
    implements _i11.JournalEntryService {
  @override
  DateTime get maxDate => (super.noSuchMethod(
        Invocation.getter(#maxDate),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.getter(#maxDate),
        ),
        returnValueForMissingStub: _FakeDateTime_1(
          this,
          Invocation.getter(#maxDate),
        ),
      ) as DateTime);

  @override
  List<_i12.JournalEntry> get journalEntries => (super.noSuchMethod(
        Invocation.getter(#journalEntries),
        returnValue: <_i12.JournalEntry>[],
        returnValueForMissingStub: <_i12.JournalEntry>[],
      ) as List<_i12.JournalEntry>);

  @override
  String get bearerPrefix => (super.noSuchMethod(
        Invocation.getter(#bearerPrefix),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i6.Future<void> getAllEntries() => (super.noSuchMethod(
        Invocation.method(
          #getAllEntries,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> addEntry(_i12.JournalEntry? newEntry) => (super.noSuchMethod(
        Invocation.method(
          #addEntry,
          [newEntry],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> updateEntry(_i12.JournalEntry? updatedEntry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEntry,
          [updatedEntry],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteEntry(_i12.JournalEntry? entry) => (super.noSuchMethod(
        Invocation.method(
          #deleteEntry,
          [entry],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  DateTime getMaxDate(List<_i12.JournalEntry>? entries) => (super.noSuchMethod(
        Invocation.method(
          #getMaxDate,
          [entries],
        ),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.method(
            #getMaxDate,
            [entries],
          ),
        ),
        returnValueForMissingStub: _FakeDateTime_1(
          this,
          Invocation.method(
            #getMaxDate,
            [entries],
          ),
        ),
      ) as DateTime);

  @override
  DateTime? getMinDates(List<_i12.JournalEntry>? entries) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMinDates,
          [entries],
        ),
        returnValueForMissingStub: null,
      ) as DateTime?);

  @override
  _i6.Future<_i2.Response> get(
    String? endpoint, {
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? baseHeaders,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #baseHeaders: baseHeaders,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    String? endpoint, {
    dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MockRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i13.MockRouter {
  @override
  List<_i14.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i14.AutoRoute>[],
        returnValueForMissingStub: <_i14.AutoRoute>[],
      ) as List<_i14.AutoRoute>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  @override
  _i6.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i15.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i15.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i15.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i15.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i16.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i16.Uint8List>.value(_i16.Uint8List(0)),
        returnValueForMissingStub:
            _i6.Future<_i16.Uint8List>.value(_i16.Uint8List(0)),
      ) as _i6.Future<_i16.Uint8List>);

  @override
  _i6.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MoodService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoodService extends _i1.Mock implements _i17.MoodService {
  @override
  List<
          MapEntry<String,
              ({_i4.Color color, double defaultSize, String imagePath})>>
      get moods => (super.noSuchMethod(
            Invocation.getter(#moods),
            returnValue: <MapEntry<String,
                ({_i4.Color color, double defaultSize, String imagePath})>>[],
            returnValueForMissingStub: <MapEntry<String,
                ({_i4.Color color, double defaultSize, String imagePath})>>[],
          ) as List<
              MapEntry<String,
                  ({_i4.Color color, double defaultSize, String imagePath})>>);

  @override
  _i3.Mood createMoodByType(
    String? moodType, [
    double? imageSize,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMoodByType,
          [
            moodType,
            imageSize,
          ],
        ),
        returnValue: _FakeMood_3(
          this,
          Invocation.method(
            #createMoodByType,
            [
              moodType,
              imageSize,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeMood_3(
          this,
          Invocation.method(
            #createMoodByType,
            [
              moodType,
              imageSize,
            ],
          ),
        ),
      ) as _i3.Mood);

  @override
  _i4.Color getMoodColorByType(String? moodType) => (super.noSuchMethod(
        Invocation.method(
          #getMoodColorByType,
          [moodType],
        ),
        returnValue: _FakeColor_4(
          this,
          Invocation.method(
            #getMoodColorByType,
            [moodType],
          ),
        ),
        returnValueForMissingStub: _FakeColor_4(
          this,
          Invocation.method(
            #getMoodColorByType,
            [moodType],
          ),
        ),
      ) as _i4.Color);
}

/// A class which mocks [TokenService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenService extends _i1.Mock implements _i18.TokenService {
  @override
  _i6.Future<void> saveTokenData(Map<String, dynamic>? responseBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTokenData,
          [responseBody],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> saveAccessTokenToStorage(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAccessTokenToStorage,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getAccessTokenFromStorage() => (super.noSuchMethod(
        Invocation.method(
          #getAccessTokenFromStorage,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> removeAccessTokenFromStorage() => (super.noSuchMethod(
        Invocation.method(
          #removeAccessTokenFromStorage,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [TimeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeService extends _i1.Mock implements _i19.TimeService {
  @override
  String dayOfWeekByName([DateTime? dateTime]) => (super.noSuchMethod(
        Invocation.method(
          #dayOfWeekByName,
          [dateTime],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #dayOfWeekByName,
            [dateTime],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #dayOfWeekByName,
            [dateTime],
          ),
        ),
      ) as String);

  @override
  String customDateString(
    String? pattern, [
    DateTime? dateTime,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customDateString,
          [
            pattern,
            dateTime,
          ],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #customDateString,
            [
              pattern,
              dateTime,
            ],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #customDateString,
            [
              pattern,
              dateTime,
            ],
          ),
        ),
      ) as String);

  @override
  String timeOfDay([DateTime? dateTime]) => (super.noSuchMethod(
        Invocation.method(
          #timeOfDay,
          [dateTime],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #timeOfDay,
            [dateTime],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #timeOfDay,
            [dateTime],
          ),
        ),
      ) as String);

  @override
  String getStringFromDate(DateTime? dataTime) => (super.noSuchMethod(
        Invocation.method(
          #getStringFromDate,
          [dataTime],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getStringFromDate,
            [dataTime],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getStringFromDate,
            [dataTime],
          ),
        ),
      ) as String);

  @override
  String getContinentalTime(DateTime? dateTime) => (super.noSuchMethod(
        Invocation.method(
          #getContinentalTime,
          [dateTime],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getContinentalTime,
            [dateTime],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getContinentalTime,
            [dateTime],
          ),
        ),
      ) as String);

  @override
  List<DateTime> daysInRange(
    DateTime? first,
    DateTime? last,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #daysInRange,
          [
            first,
            last,
          ],
        ),
        returnValue: <DateTime>[],
        returnValueForMissingStub: <DateTime>[],
      ) as List<DateTime>);

  @override
  String removeTimeStamp(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #removeTimeStamp,
          [date],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #removeTimeStamp,
            [date],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #removeTimeStamp,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [ImageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageService extends _i1.Mock implements _i20.ImageService {
  @override
  _i5.ImageProvider<Object> get mindful01 => (super.noSuchMethod(
        Invocation.getter(#mindful01),
        returnValue: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful01),
        ),
        returnValueForMissingStub: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful01),
        ),
      ) as _i5.ImageProvider<Object>);

  @override
  set mindful01(_i5.ImageProvider<Object>? _mindful01) => super.noSuchMethod(
        Invocation.setter(
          #mindful01,
          _mindful01,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ImageProvider<Object> get mindful02 => (super.noSuchMethod(
        Invocation.getter(#mindful02),
        returnValue: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful02),
        ),
        returnValueForMissingStub: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful02),
        ),
      ) as _i5.ImageProvider<Object>);

  @override
  set mindful02(_i5.ImageProvider<Object>? _mindful02) => super.noSuchMethod(
        Invocation.setter(
          #mindful02,
          _mindful02,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ImageProvider<Object> get mindful03 => (super.noSuchMethod(
        Invocation.getter(#mindful03),
        returnValue: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful03),
        ),
        returnValueForMissingStub: _FakeImageProvider_5<Object>(
          this,
          Invocation.getter(#mindful03),
        ),
      ) as _i5.ImageProvider<Object>);

  @override
  set mindful03(_i5.ImageProvider<Object>? _mindful03) => super.noSuchMethod(
        Invocation.setter(
          #mindful03,
          _mindful03,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i6.Future<void> cacheImage(_i5.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #cacheImage,
          [context],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i5.ImageProvider<Object> getRandomMindfulImage() => (super.noSuchMethod(
        Invocation.method(
          #getRandomMindfulImage,
          [],
        ),
        returnValue: _FakeImageProvider_5<Object>(
          this,
          Invocation.method(
            #getRandomMindfulImage,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImageProvider_5<Object>(
          this,
          Invocation.method(
            #getRandomMindfulImage,
            [],
          ),
        ),
      ) as _i5.ImageProvider<Object>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i21.AuthService {
  @override
  bool get isLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isLoggedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get bearerPrefix => (super.noSuchMethod(
        Invocation.getter(#bearerPrefix),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<_i2.Response> register({required _i10.BaseUser? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {#user: user},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #register,
            [],
            {#user: user},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #register,
            [],
            {#user: user},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> checkAvailableEmail({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAvailableEmail,
          [],
          {#email: email},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #checkAvailableEmail,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #checkAvailableEmail,
            [],
            {#email: email},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> get(
    String? endpoint, {
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? baseHeaders,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #baseHeaders: baseHeaders,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    String? endpoint, {
    dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ToastService].
///
/// See the documentation for Mockito's code generation for more information.
class MockToastService extends _i1.Mock implements _i22.ToastService {
  @override
  void showSnackBar({
    String? message,
    Duration? duration,
    _i4.Color? textColor,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [],
          {
            #message: message,
            #duration: duration,
            #textColor: textColor,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<T> popupMenu<T>(
    _i5.BuildContext? context, {
    required _i4.Color? color,
    required _i23.PopupMenuParameters<dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popupMenu,
          [context],
          {
            #color: color,
            #parameters: parameters,
          },
        ),
        returnValue: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #popupMenu,
                  [context],
                  {
                    #color: color,
                    #parameters: parameters,
                  },
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_6<T>(
              this,
              Invocation.method(
                #popupMenu,
                [context],
                {
                  #color: color,
                  #parameters: parameters,
                },
              ),
            ),
        returnValueForMissingStub: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #popupMenu,
                  [context],
                  {
                    #color: color,
                    #parameters: parameters,
                  },
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_6<T>(
              this,
              Invocation.method(
                #popupMenu,
                [context],
                {
                  #color: color,
                  #parameters: parameters,
                },
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i6.Future<T> deleteAccountPopupMenu<T>(
    _i5.BuildContext? context, {
    required _i23.PopupMenuParameters<dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccountPopupMenu,
          [context],
          {#parameters: parameters},
        ),
        returnValue: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #deleteAccountPopupMenu,
                  [context],
                  {#parameters: parameters},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_6<T>(
              this,
              Invocation.method(
                #deleteAccountPopupMenu,
                [context],
                {#parameters: parameters},
              ),
            ),
        returnValueForMissingStub: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #deleteAccountPopupMenu,
                  [context],
                  {#parameters: parameters},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_6<T>(
              this,
              Invocation.method(
                #deleteAccountPopupMenu,
                [context],
                {#parameters: parameters},
              ),
            ),
      ) as _i6.Future<T>);

  @override
  void unfocusAll(_i5.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #unfocusAll,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LikedQuotesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikedQuotesService extends _i1.Mock
    implements _i24.LikedQuotesService {
  @override
  List<_i25.LikedQuote> get likedQuotes => (super.noSuchMethod(
        Invocation.getter(#likedQuotes),
        returnValue: <_i25.LikedQuote>[],
        returnValueForMissingStub: <_i25.LikedQuote>[],
      ) as List<_i25.LikedQuote>);

  @override
  String get bearerPrefix => (super.noSuchMethod(
        Invocation.getter(#bearerPrefix),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i6.Future<void> addQuote(_i25.LikedQuote? quote) => (super.noSuchMethod(
        Invocation.method(
          #addQuote,
          [quote],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> getAllQuotes() => (super.noSuchMethod(
        Invocation.method(
          #getAllQuotes,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteLikedQuote(_i25.LikedQuote? quote) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLikedQuote,
          [quote],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Response> get(
    String? endpoint, {
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? baseHeaders,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #baseHeaders: baseHeaders,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    String? endpoint, {
    dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ZenQuotesApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockZenQuotesApiService extends _i1.Mock
    implements _i26.ZenQuotesApiService {
  @override
  List<_i27.Quote> get quotes => (super.noSuchMethod(
        Invocation.getter(#quotes),
        returnValue: <_i27.Quote>[],
        returnValueForMissingStub: <_i27.Quote>[],
      ) as List<_i27.Quote>);

  @override
  set quotes(List<_i27.Quote>? _quotes) => super.noSuchMethod(
        Invocation.setter(
          #quotes,
          _quotes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  String get bearerPrefix => (super.noSuchMethod(
        Invocation.getter(#bearerPrefix),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#bearerPrefix),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<void> fetchRandomQuotes() => (super.noSuchMethod(
        Invocation.method(
          #fetchRandomQuotes,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Response> get(
    String? endpoint, {
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? baseHeaders,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #baseHeaders: baseHeaders,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #baseHeaders: baseHeaders,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    String? endpoint, {
    required dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    String? endpoint, {
    dynamic body,
    String? tempHost,
    Map<String, String>? extraHeaders,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #tempHost: tempHost,
            #extraHeaders: extraHeaders,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #body: body,
              #tempHost: tempHost,
              #extraHeaders: extraHeaders,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i28.DatabaseService {
  @override
  _i7.Database get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeDatabase_7(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeDatabase_7(
          this,
          Invocation.getter(#db),
        ),
      ) as _i7.Database);

  @override
  ({String entires, String images, String likedQuotes}) get table =>
      (super.noSuchMethod(
        Invocation.getter(#table),
        returnValue: (
          entires: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          ),
          images: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          ),
          likedQuotes: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          )
        ),
        returnValueForMissingStub: (
          entires: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          ),
          images: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          ),
          likedQuotes: _i9.dummyValue<String>(
            this,
            Invocation.getter(#table),
          )
        ),
      ) as ({String entires, String images, String likedQuotes}));

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> closeDatabase() => (super.noSuchMethod(
        Invocation.method(
          #closeDatabase,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LikedQuoteProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikedQuoteProvider extends _i1.Mock
    implements _i29.LikedQuoteProvider {}
